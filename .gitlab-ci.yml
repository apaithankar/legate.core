image:
  name: "rapidsai/devcontainers:23.06-cpp-cuda11.8-mambaforge-ubuntu22.04"

workflow:
  rules:
    - if: ($CI_PIPELINE_SOURCE == "merge_request_event" || $CI_PIPELINE_SOURCE == "push") &&
          ($CI_PROJECT_PATH == "legate/legate.core.internal")

stages:
    - build
    - test

Build:LegateCore:
  stage: build

  tags:
    - cpu_only
    - gpu/disabled

  variables:
    # Set the following two vars to `nthreads - 1`
    JOBS: 1
    CMAKE_BUILD_PARALLEL_LEVEL: 1
    PYTHONDONTWRITEBYTECODE: 1
    DEFAULT_CONDA_ENV: legate
    GIT_DEPTH: 0
    GIT_STRATEGY: clone
    USE_CUDA: 'OFF'
    # Add these if we want to speed up builds with sccache
    SCCACHE_REGION: us-east-2
    SCCACHE_BUCKET: rapids-sccache-devs
    SCCACHE_S3_KEY_PREFIX: legate-core-int-dev
    GH_TOKEN: ''
    GITHUB_TOKEN: ''
    VAULT_HOST: ''
    VAULT_S3_TTL: "28800s" # 8 hours

  before_script:
    # Set variables for AWS authentication
    - |
      if [ $PERSONAL_ACCESS_TOKEN ]; then 
        VAULT_HOST='https://vault.ops.k8s.rapids.ai'; 
        GH_TOKEN=$PERSONAL_ACCESS_TOKEN;
        GITHUB_TOKEN=$PERSONAL_ACCESS_TOKEN;
      fi
    - cp -R $CI_PROJECT_DIR ~coder/legate
    - mkdir -p ~coder/.local
    - cp -R $CI_PROJECT_DIR/continuous_integration/home/coder/.local/bin  ~coder/.local/.
    - cp -ar $CI_PROJECT_DIR/continuous_integration/home/coder/.gitconfig /home/coder/;
    - chown -R coder:coder /home/coder/
    - mkdir -p /tmp/out;
    - chown -R coder:coder /tmp/out

  script:
    # Create conda env
    - su coder -c 'cd ~/; exec entrypoint make-conda-env'

    # Build legate.core C++ library
    - su coder -c 'cd ~/; exec entrypoint build-legate-cpp'

    # Build legate.core Python Wheel
    - su coder -c 'cd ~/; exec entrypoint build-legate-wheel'

    # Build legate.core Conda Package
    - su coder -c 'cd ~/; exec entrypoint build-legate-conda'

    # Build legate.core C++ test
    - su coder -c 'cd ~/; exec entrypoint build-cpp-test'

  after_script:
    # Copy the artifacts
    - mkdir -p $CI_PROJECT_DIR/artifacts
    - cp /tmp/out/* $CI_PROJECT_DIR/artifacts/
    - cp -ar /tmp/conda-build $CI_PROJECT_DIR/artifacts/.

  artifacts:
    name: "$CI_COMMIT_REF_NAME"
    paths:
      - artifacts
    exclude:
      - artifacts/env*.yaml

Test:LegateCoreUnitTest:
  stage: test

  tags:
    - gpu/enabled

  variables:
    DEFAULT_CONDA_ENV: legate
    PYTHONDONTWRITEBYTECODE: 1

  before_script:
    - cp -R $CI_PROJECT_DIR /home/coder/legate
    - cp -ar $CI_PROJECT_DIR/continuous_integration/home/coder/.gitconfig /home/coder/
    - cp -ar $CI_PROJECT_DIR/continuous_integration/home/coder/.local /home/coder/
    - chmod a+x /home/coder/.local/bin/*
    - chown -R coder:coder /home/coder/
    # Create the legate conda environment
    - su coder -c 'cd ~/; exec entrypoint mamba create -n "${DEFAULT_CONDA_ENV:-legate}"'
    # Install legate-core and cunumeric in the legate conda environment
    - su coder -c 'cd ~/; exec entrypoint mamba install -y -n "${DEFAULT_CONDA_ENV:-legate}" -c nvidia -c conda-forge -c $CI_PROJECT_DIR/artifacts/conda-build/legate_core legate-core'
    - su coder -c 'cd ~/; exec entrypoint mamba install -y -n "${DEFAULT_CONDA_ENV:-legate}" -c conda-forge pytest pytest-mock ipython jupyter_client'

  script:
    # Run legate.core unit tests
    - su coder -c 'cd ~/legate/tests/unit; pytest'

