# SPDX-FileCopyrightText: Copyright (c) 2024 NVIDIA CORPORATION & AFFILIATES. All rights reserved.
# SPDX-License-Identifier: LicenseRef-NvidiaProprietary
#
# NVIDIA CORPORATION, its affiliates and licensors retain all intellectual
# property and proprietary rights in and to this material, related
# documentation and any modifications thereto. Any use, reproduction,
# disclosure or distribution of this material and related documentation
# without an express license agreement from NVIDIA CORPORATION or
# its affiliates is strictly prohibited.

[build-system]
requires = [
    "scikit-build-core",
    "cython>=3.0.1",
    "rich",
    # pip needs to be listed here so that we can uninstall legate before running our own
    # install. If we don't list pip here, then it is not found when using the "build
    # isolation" (read: everything is installed using a temp venv) feature of pip.
    "pip",
]
build-backend = "build_legate"
backend-path = ["src/python"]
python-requires = ">=3.10"

[project]
name = "legate"
authors = [{name = "NVIDIA Corporation"}]
license = {text = "Proprietary"}
description = "legate - The Foundation for All Legate Libraries"
documentation = "https://docs.nvidia.com/legate/latest/"
changelog = "https://docs.nvidia.com/legate/latest/api/changes/index.html"
classifiers = [
    "Intended Audience :: Developers",
    "Topic :: Database",
    "Topic :: Scientific/Engineering",
    "License :: Proprietary :: Nvidia Proprietary",
    "Programming Language :: Python",
    "Programming Language :: Python :: 3.10",
    "Programming Language :: Python :: 3.11",
    "Programming Language :: Python :: 3.12"
]
dependencies = ["numpy!=2.1.0"]
dynamic = ["version"]

[project.optional-dependencies]
test = [
    "colorama",
    "coverage",
    "mock",
    "mypy>=0.961",
    "pynvml",
    "pytest-cov",
    "pytest",
    "pytest-mock",
    "jupyter_client",
    "psutil"
]

[project.urls]
homepage = "https://github.com/nv-legate/legate"

[project.scripts]
legate = "legate.driver:main"
legate-issue = "legate.issue:main"
legate-jupyter = "legate.jupyter:main"
lgpatch = "legate.lgpatch:main"

[tool.scikit-build.cmake]
version = ">=3.22.1,!=3.23.0,!=3.25.0"

[tool.scikit-build.metadata.version]
provider = "scikit_build_core.metadata.setuptools_scm"

[tool.scikit-build.sdist]
include = [
    "src/python/legate/_version.py",
    "src/python/legate/install_info.py",
]

[tool.setuptools_scm]
write_to = "src/python/legate/_version.py"

[tool.scikit-build.build]
verbose = true

[tool.scikit-build.logging]
level = "DEBUG"

[tool.scikit-build.wheel]
exclude = ["**.pyx", "**CMakeLists.txt", "**.pxd"]
platlib = true
install-dir = "/data"

[tool.scikit-build]
experimental = true  # needed for install-dir = "/data"

[tool.scikit-build.wheel.packages]
"legate" = "src/python/legate"

[tool.black]
line-length = 79
target-version = ["py310"]
include = '\.py?$'
exclude = '''
/(
    \.eggs |
    \.git |
    \.mypy_cache |
    \.tox |
    \.venv |
    _build |
    buck-out |
    build |
    dist |
    arch-.* |
    .*-arch |
    .*venv
)/
'''

[tool.coverage.report]
exclude_lines = [
    "pragma: no cover",
    "if TYPE_CHECKING:",
    "@abstract"
]

[tool.cython-lint]
max-line-length = 79

[tool.mypy]
python_version = "3.10"
mypy_path = "./src/python/typings/"
cache_dir = "./.cache/mypy"

pretty = true
show_error_codes = true
show_error_context = true
show_column_numbers = true

namespace_packages = true
ignore_missing_imports = false

disallow_any_unimported = true
disallow_any_expr = false
disallow_any_decorated = false
disallow_any_explicit = false
disallow_any_generics = true
disallow_subclassing_any = true

disallow_untyped_calls = true
disallow_untyped_defs = true
disallow_incomplete_defs = true
check_untyped_defs = true
disallow_untyped_decorators = true
no_implicit_optional = true
strict_optional = true

warn_redundant_casts = true
warn_unused_ignores = true
warn_no_return = true
warn_return_any = false
warn_unreachable = true

ignore_errors = false

allow_untyped_globals = false
allow_redefinition = false
implicit_reexport = true
strict_equality = true

warn_unused_configs = true
exclude = ["tests/python/integration", "tests/cpp"]

[[tool.mypy.overrides]]
# ignore certain auto-generated and utility files
module = [
    "legate._version",
    "legate._sphinxext.*",
    "legate.jupyter.*",
]
ignore_errors = true

[tool.pytest.ini_options]
cache_dir = "./.cache/pytest"
required_plugins = "pytest-mock"
markers = [
    "slow: marks tests as slow (deselect with '-m \"not slow\"')"
]
filterwarnings = ["error"]

[tool.isort]
line_length = 79
multi_line_output = 3
include_trailing_comma = true
force_grid_wrap = 0
combine_as_imports = true
order_by_type = true
known_third_party = ["numpy"]
known_first_party = ["legate"]
default_section = "THIRDPARTY"
sections = [
    "FUTURE",
    "STDLIB",
    "THIRDPARTY",
    "FIRSTPARTY",
    "LOCALFOLDER"
]
skip = [
    ".eggs",
    ".git",
    ".mypy_cache",
    ".tox",
    ".venv",
    "_build",
    "build",
    "dist",
    "__init__.py"
]
skip_glob = [
   "install/*",
   "arch-*",
   "venv*",
   "*-arch",
   "*venv",
]
