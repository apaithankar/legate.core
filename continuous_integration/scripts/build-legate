#!/usr/bin/env bash

build_legate_ci() {
    set -xeo pipefail;
    build-legate-cpp;
    build-legate-wheel;
    build-legate-conda;
}

build_legate_release() {
    set -xeo pipefail;
    mkdir -p /tmp/env_yaml /tmp/conda-build

    conda mambabuild --output-folder /tmp/conda-build -c nvidia -c conda-forge --no-include-recipe conda/conda-build
}

copy_release_artifacts() {
    echo Copying release artifacts

    mkdir -p "$ARTIFACTS_DIR"

    cp /tmp/conda-build/linux-64/legate-core-*.tar.bz2 "$ARTIFACTS_DIR"
}

copy_ci_artifacts() {
    echo Copying CI artifacts

    mkdir -p "$ARTIFACTS_DIR"

    cp -r /tmp/out          "$ARTIFACTS_DIR"
    cp -r /tmp/conda-build  "$ARTIFACTS_DIR"
}

build_legate() {
    set -x;

    . conda-utils;
    . setup-utils;

    export BUILD_TYPE=$1

    set -xeuo pipefail;

    set_base_defs;

    cd "$PREBUILD_DIR"

    setup_build_env;
    init_sccache;
    cd "$REPO_DIR";

    rm -rf "$REPO_DIR/build";

    make-conda-env "$BUILD_TYPE";

    set -xeo pipefail;
    activate_conda_env;
    conda_info;

    case "$BUILD_TYPE" in
        ci) build_legate_ci && copy_ci_artifacts;;
        release) build_legate_release && copy_release_artifacts;;
        *) return 1;;
    esac
}

build_legate_fake() {
    set -xeuo pipefail;

    mkdir -p /tmp/out /tmp/conda-build/legate_core
    touch /tmp/out/legate-core-23.11.00-dummy.tar.bz2
    touch /tmp/conda-build/legate_core/dummy.txt

    copy_ci_artifacts
}

(build_legate "$@");
