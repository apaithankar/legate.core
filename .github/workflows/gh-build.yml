name: Build legate.core.internal

on:
  workflow_call:
    inputs:
      target-device:
        required: true
        type: string
        description: One of CPU / GPU
      repos-name:
        required: true
        type: string
      runs-on:
        required: true
        type: string
      sha:
        required: true
        type: string
        description: A unique identifier for labeling the images / artifacts
      build-type:
        required: true
        type: string
        description: One of ci / release
      cmake-preset:
        required: true
        type: string
      ucx-config:
        required: true
        type: string
      ucx-string:
        required: true
        type: string
      use-container:
        required: true
        type: boolean
      platform:
        required: true
        type: string

env:
  UCX_ENABLED: ${{ (inputs.ucx-config == 'ucx' && 'ON') || 'OFF' }}
  USE_CUDA: ${{ (inputs.target-device == 'cpu' && 'OFF') || 'ON' }}
  LEGATE_CORE_CMAKE_PRESET: ${{ inputs.cmake-preset }}
  ARTIFACTS_DIR: "${{ github.workspace }}/.artifacts"
  ARTIFACT_NAME: "${{ inputs.platform }}-${{ inputs.repos-name }}-${{ inputs.target-device }}-${{ inputs.cmake-preset }}${{ inputs.ucx-string }}-${{ inputs.sha }}"
jobs:
  build:
    name: Build (${{ inputs.platform }}, ${{ inputs.target-device }}, ${{ inputs.cmake-preset }}, ${{ inputs.ucx-config }}, ${{ inputs.build-type }}, Use container=${{ inputs.use-container }} )

    permissions:
      id-token: write # This is required for configure-aws-credentials
      contents: read  # This is required for actions/checkout

    runs-on: ${{ inputs.runs-on }}

    defaults:
      run:
        shell: bash --noprofile --norc -xeuo pipefail {0}

    steps:
      - name: Checkout ${{ inputs.repos-name }} (= this repo)
        uses: actions/checkout@v3
        with:
          fetch-depth: 0

      - if: github.repository_owner == 'nv-legate'
        name: Get AWS credentials for sccache bucket
        uses: aws-actions/configure-aws-credentials@v2
        with:
          aws-region: us-east-2
          role-duration-seconds: 28800 # 8 hours
          role-to-assume: arn:aws:iam::279114543810:role/gha-oidc-nv-legate

      - if: ${{ inputs.use-container }}
        name: Build ${{ inputs.repos-name }} (in container)
        run: |
          docker run \
            -e AWS_REGION \
            -e AWS_SESSION_TOKEN \
            -e AWS_ACCESS_KEY_ID \
            -e AWS_SECRET_ACCESS_KEY \
            -e GITHUB_TOKEN \
            -e USE_CUDA \
            -e UCX_ENABLED \
            -e LEGATE_CORE_CMAKE_PRESET \
            -v "$(pwd):$(pwd)" \
            -v "$ARTIFACTS_DIR:$(pwd)/.artifacts" \
            --rm "condaforge/miniforge3:latest" \
            /bin/bash -c "cd $(pwd) && continuous_integration/scripts/entrypoint build-legate ${{ inputs.build-type}} ${{ inputs.target-device }}"

      - if: ${{ !inputs.use-container }}
        name: Build ${{ inputs.repos-name }} (without container)
        run: continuous_integration/scripts/entrypoint build-legate ${{ inputs.build-type}}

      - name: Display structure of the artifacts folder
        run: ls -aR ${{ env.ARTIFACTS_DIR }}

      - name: Upload build artifacts
        uses: actions/upload-artifact@v3
        with:
          name: ${{ env.ARTIFACT_NAME }}
          path: ${{ env.ARTIFACTS_DIR }}